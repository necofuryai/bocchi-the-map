---
name: Frontend Unit Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/frontend-tests.yml'
  pull_request:
    branches: [main]
    paths:
      - 'web/**'
      - '.github/workflows/frontend-tests.yml'

env:
  NODE_VERSION: '18'

jobs:
  frontend-unit-tests:
    name: Frontend Unit Tests with Vitest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'

      - name: Install dependencies
        working-directory: web
        run: npm ci

      - name: Run type checking
        working-directory: web
        run: npx tsc --noEmit

      - name: Run ESLint
        working-directory: web
        run: npm run lint

      - name: Run unit tests with coverage
        working-directory: web
        run: npm run test:coverage

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-unit-test-results
          path: |
            web/coverage/
            web/test-results/
          if-no-files-found: ignore

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          directory: web/coverage
          flags: frontend-unit-tests
          name: frontend-unit-coverage
          fail_ci_if_error: false

  frontend-component-tests:
    name: Frontend Component Tests
    runs-on: ubuntu-latest
    needs: frontend-unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'

      - name: Install dependencies
        working-directory: web
        run: npm ci

      - name: Run component tests
        working-directory: web
        run: |
          # Run tests for specific component directories
          npm run test -- src/components src/examples --reporter=verbose

      - name: Comment PR with test results
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ðŸ§ª Frontend Unit Test Results

            âœ… **Frontend unit tests completed!**

            **Test Coverage:**
            - Component Tests: âœ… Passed
            - Type Checking: âœ… Passed
            - ESLint: âœ… Passed

            **Test Environment:**
            - Node.js Version: ${{ env.NODE_VERSION }}
            - Testing Framework: Vitest with jsdom
            - Coverage: Uploaded to Codecov

            See the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed results.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });