#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Documentation sync reminder for feature commits
echo "🔍 Checking for documentation sync requirements..."

# Get the commit message from git
COMMIT_MSG_FILE=".git/COMMIT_EDITMSG"
if [ -f "$COMMIT_MSG_FILE" ]; then
  COMMIT_MSG=$(cat "$COMMIT_MSG_FILE" 2>/dev/null || echo "")
else
  COMMIT_MSG=""
fi

# Check if this is a feature/improve commit
if echo "$COMMIT_MSG" | grep -E "^(feat|improve|fix)(\([^)]*\))?:" > /dev/null; then
  echo ""
  echo "📋 Feature/improvement detected! Please consider updating documentation:"
  echo ""
  echo "   📝 Update README.md if setup instructions changed"
  echo "   📚 Update docs/IMPLEMENTATION_LOG.md for significant changes"
  echo "   🤖 Update CLAUDE.md if AI development guidance changed"
  echo "   📊 Add milestone to implementation log for major features"
  echo ""
  echo "   💡 Use 'docs: update documentation for [feature]' for doc updates"
  echo ""
fi

# Check for changes in critical files that might need documentation updates
CHANGED_FILES=$(git diff --cached --name-only)

# API changes
if echo "$CHANGED_FILES" | grep -E "^api/(.*\.(go|sql)|migrations/)" > /dev/null; then
  echo "🔧 API changes detected - consider updating:"
  echo "   • api/README.md for new endpoints or significant changes"
  echo "   • Database schema documentation if migrations were added"
fi

# Frontend changes
if echo "$CHANGED_FILES" | grep -E "^web/(.*\.(ts|tsx|js|jsx)|package\.json)" > /dev/null; then
  echo "🎨 Frontend changes detected - consider updating:"
  echo "   • web/README.md for new components or setup changes"
  echo "   • Performance documentation if optimizations were made"
fi

# Infrastructure changes
if echo "$CHANGED_FILES" | grep -E "^(infra/.*\.tf|\.github/|Dockerfile)" > /dev/null; then
  echo "🚀 Infrastructure changes detected - consider updating:"
  echo "   • infra/README.md for new deployment procedures"
  echo "   • Main README.md for setup requirement changes"
fi

echo "✅ Documentation check complete. Proceeding with commit..."
echo ""